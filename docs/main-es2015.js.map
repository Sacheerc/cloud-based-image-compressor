{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/modules/home/components/add-files/add-files.component.html","./src/app/modules/home/components/compressor/compressor.component.html","./src/app/modules/home/components/file-list/file-list.component.html","./src/app/modules/home/home.component.html","./src/app/shared/google-picker/google-picker.component.html","./src/app/shared/image-compress/image-compress.component.html","./src/app/shared/local-file-picker/local-file-picker.component.html","./src/app/shared/nav-bar/nav-bar.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/modules/home/components/add-files/add-files.component.css","./src/app/modules/home/components/add-files/add-files.component.ts","./src/app/modules/home/components/compressor/compressor.component.css","./src/app/modules/home/components/compressor/compressor.component.ts","./src/app/modules/home/components/file-list/file-list.component.css","./src/app/modules/home/components/file-list/file-list.component.ts","./src/app/modules/home/home.component.css","./src/app/modules/home/home.component.ts","./src/app/services/api.service.ts","./src/app/services/file.service.ts","./src/app/shared/google-picker/google-picker.component.css","./src/app/shared/google-picker/google-picker.component.ts","./src/app/shared/image-compress/image-compress.component.css","./src/app/shared/image-compress/image-compress.component.ts","./src/app/shared/local-file-picker/local-file-picker.component.css","./src/app/shared/local-file-picker/local-file-picker.component.ts","./src/app/shared/nav-bar/nav-bar.component.css","./src/app/shared/nav-bar/nav-bar.component.ts","./src/environments/environment.ts","./src/keys.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n<footer class=\\\"text-center bg-warning p-1\\\">\\r\\n  <p>&copy; All rights reserved for <i>Reduzer</i> 2020</p>\\r\\n  <div style=\\\"margin-top: -15px;\\\">\\r\\n    <small\\r\\n      ><a href=\\\"\\\" style=\\\"color: black !important;\\\">Terms and Conditions</a> |\\r\\n      <a href=\\\"\\\" style=\\\"color: black !important;\\\">Privacy Policy</a></small\\r\\n    >\\r\\n  </div>\\r\\n</footer>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <mat-card\\r\\n    class=\\\"text-center add-files\\\"\\r\\n    style=\\\"background-color: rgba(255, 255, 255, 0.945)\\\"\\r\\n  >\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <mat-card-title><strong>Pick your images</strong></mat-card-title>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <app-local-file-picker></app-local-file-picker>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <app-google-picker\\r\\n          (selectedFiles)=\\\"onFileSelect($event)\\\"\\r\\n        ></app-google-picker>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-4\\\">\\r\\n        <mat-card\\r\\n          class=\\\"button-card\\\"\\r\\n          style=\\\"background-color: rgba(255, 255, 255, 0.904)\\\"\\r\\n        >\\r\\n          <mat-card-title>Drop Box</mat-card-title>\\r\\n          <button mat-fab aria-label=\\\"Not completed\\\" disabled>\\r\\n            <mat-icon>block</mat-icon>\\r\\n          </button>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"isDownloadCompleted\\\">\\r\\n  <mat-card class=\\\"button-card\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 text-center\\\">\\r\\n        <app-image-compress *ngIf=\\\"!isStarted\\\"></app-image-compress>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"isStarted && !isDownloaded\\\">\\r\\n          <div class=\\\"col-md-10\\\">\\r\\n            <mat-progress-bar\\r\\n              mode=\\\"determinate\\\"\\r\\n              color=\\\"warn\\\"\\r\\n              [value]=\\\"value\\\"\\r\\n              class=\\\"mt-3\\\"\\r\\n            ></mat-progress-bar>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-2 mt-2 text-success\\\">{{ value }} %</div>\\r\\n        </div>\\r\\n        <button\\r\\n          *ngIf=\\\"isDownloaded && !refresh\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          aria-label=\\\"Not completed\\\"\\r\\n          (click)=\\\"downloadZip()\\\"\\r\\n        >\\r\\n          <mat-icon style=\\\"color: green\\\">play_circle_filled</mat-icon> Download\\r\\n        </button>\\r\\n        <button\\r\\n          *ngIf=\\\"refresh\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          aria-label=\\\"Not completed\\\"\\r\\n          (click)=\\\"refreshReduzer()\\\"\\r\\n        >\\r\\n          <mat-icon style=\\\"color: green\\\">refresh</mat-icon> Refresh\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<br>\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <mat-list>\\r\\n      <mat-card>\\r\\n        <h3 mat-subheader>Images</h3>\\r\\n      <div [style.overflow]=\\\"'auto'\\\" [style.height.px]=\\\"'400'\\\">\\r\\n        <mat-list-item *ngFor=\\\"let file of imageArr\\\">\\r\\n        <mat-icon mat-list-icon>perm_media</mat-icon>\\r\\n        <p mat-line>\\r\\n          url : https://www.googleapis.com/drive/v2/files/{{ file.id }}\\r\\n        </p>\\r\\n        <mat-icon *ngIf=\\\"file.status == 'done'\\\" class=\\\"text-success\\\"\\r\\n          >check_circle</mat-icon\\r\\n        >\\r\\n        <mat-icon *ngIf=\\\"file.status == 'failed'\\\" class=\\\"text-danger\\\"\\r\\n          >info</mat-icon\\r\\n        >\\r\\n\\r\\n        <p mat-line>\\r\\n          <mat-progress-bar\\r\\n            *ngIf=\\\"file.status == 'processing'\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            mode=\\\"indeterminate\\\"\\r\\n          ></mat-progress-bar>\\r\\n          Original Size: {{ file.size / 1024 }} KB\\r\\n        </p>\\r\\n      </mat-list-item>\\r\\n      </div>\\r\\n      </mat-card>\\r\\n    </mat-list>\\r\\n  </div>\\r\\n  <br>\\r\\n  <mat-card *ngIf=\\\"!isDownloaded\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-10\\\">\\r\\n        downloading\\r\\n        <mat-progress-bar\\r\\n          mode=\\\"determinate\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          [value]=\\\"value\\\"\\r\\n          class=\\\"mt-3\\\"\\r\\n        ></mat-progress-bar>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-2 text-success\\\">\\r\\n        {{value}}% completed\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- <app-google-picker></app-google-picker>\\r\\n\\r\\n<app-image-compress></app-image-compress> -->\\r\\n<div class=\\\"background\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n      <mat-card class=\\\"container text-center\\\" style=\\\"font-size: 20px; color: rgb(71, 71, 71); background-color: rgba(255, 255, 255, 0.904);\\\">\\r\\n          <img src=\\\"../../assets/logo.png\\\" alt=\\\"\\\" style=\\\"width: 200px;\\\"><br>\\r\\n          <strong>Bulk Image Compressor <br>  No limitations, Totally free and super fast!</strong>\\r\\n        </mat-card>\\r\\n  </div>\\r\\n  <app-add-files (selectedFiles)=\\\"onFileSelect($event)\\\"> </app-add-files>\\r\\n  <div class=\\\" container\\\">\\r\\n    <div class=\\\"text-left p-5\\\">\\r\\n        <h3 class=\\\"text-secondary\\\">How it Works?</h3>\\r\\n        <br>\\r\\n        <p>\\r\\n          The Reduzer App fetches your large size images from google drive within few seconds by using it's back-end server. Therefore there is no any data charge for your side to download large image files. Then the Reduzer app automatically starts the image resizing process according to your request. Then it will create a zip file and you will be allowed to download it within a single click. <br><br> <strong>Your images will be automatically deleted from our servers within an hour. <br><span class=\\\"text-dark\\\"> So it's time to work with Reduzer and  save your data!  </span></strong> \\r\\n        </p>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n  <app-file-list\\r\\n    *ngIf=\\\"isVisible\\\"\\r\\n    [selectedFiles]=\\\"selectedFiles\\\"\\r\\n  ></app-file-list>\\r\\n  <br />\\r\\n  <app-compressor></app-compressor>\\r\\n  <br />\\r\\n</div>\\r\\n\"","module.exports = \"<mat-card class=\\\"button-card\\\" style=\\\"background-color: rgba(255, 255, 255, 0.904);\\\">\\r\\n  <mat-card-title class=\\\"\\\">Google Drive</mat-card-title>\\r\\n  <button mat-fab (click)=\\\"loadGoogleDrive()\\\" aria-label=\\\"Open google drive\\\">\\r\\n    <mat-icon>cloud_download</mat-icon>\\r\\n  </button>\\r\\n</mat-card>\\r\\n\"","module.exports = \"<button\\r\\n  *ngIf=\\\"downloadedFiles.length !== compressedImages.length\\\"\\r\\n  mat-raised-button\\r\\n  color=\\\"accent\\\"\\r\\n  aria-label=\\\"Not completed\\\"\\r\\n  (click)=\\\"selectFileLocally()\\\"\\r\\n>\\r\\n  <mat-icon style=\\\"color: green\\\">play_circle_filled</mat-icon> Compress Images\\r\\n</button>\\r\\n<button\\r\\n  *ngIf=\\\"downloadedFiles.length === compressedImages.length\\\"\\r\\n  mat-raised-button\\r\\n  color=\\\"accent\\\"\\r\\n  aria-label=\\\"Not completed\\\"\\r\\n  (click)=\\\"download()\\\"\\r\\n>\\r\\n  <mat-icon style=\\\"color: rgb(128, 0, 90)\\\">play_circle_filled</mat-icon>\\r\\n  Download Zip\\r\\n</button>\\r\\n\"","module.exports = \"<mat-card\\n  class=\\\"button-card\\\"\\n  style=\\\"background-color: rgba(255, 255, 255, 0.904)\\\"\\n>\\n  <mat-card-title>Local computer</mat-card-title>\\n  <button\\n    mat-fab\\n    (click)=\\\"loadImages()\\\"\\n    disabled\\n    aria-label=\\\"Upload files from local computer\\\"\\n  >\\n    <!-- <mat-icon>computer</mat-icon> -->\\n    <mat-icon>block</mat-icon>\\n  </button>\\n</mat-card>\\n\"","module.exports = \"<div style=\\\"position: sticky;\\\">\\r\\n<mat-toolbar color=\\\"accent\\\">\\r\\n  <!-- <span>ReduZer</span> -->\\r\\n  <img src=\\\"../../../assets/logo.png\\\" alt=\\\"\\\" style=\\\"height: 45px; margin-top: -5px;margin-left: 20px;\\\" />\\r\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n  <span></span>\\r\\n</mat-toolbar>\\r\\n</div>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './modules/home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NavBarComponent } from './shared/nav-bar/nav-bar.component';\r\nimport { HomeComponent } from './modules/home/home.component';\r\nimport { GooglePickerComponent } from './shared/google-picker/google-picker.component'\r\nimport { NgxImageCompressService } from 'ngx-image-compress';\r\nimport { ImageCompressComponent } from './shared/image-compress/image-compress.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ApiService } from './services/api.service';\r\nimport { FileService } from './services/file.service';\r\nimport { FileListComponent } from './modules/home/components/file-list/file-list.component';\r\n\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { AddFilesComponent } from './modules/home/components/add-files/add-files.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CompressorComponent } from './modules/home/components/compressor/compressor.component';\nimport { LocalFilePickerComponent } from './shared/local-file-picker/local-file-picker.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    HomeComponent,\r\n    GooglePickerComponent,\r\n    ImageCompressComponent,\r\n    FileListComponent,\r\n    AddFilesComponent,\r\n    CompressorComponent,\r\n    LocalFilePickerComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n  ],\r\n  providers: [\r\n    NgxImageCompressService,\r\n    ApiService,\r\n    FileService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\n\r\nexport class AppModule { }\r\n","module.exports = \".add-files {\\r\\n  margin-top: 40px;\\r\\n  padding: 40px;\\r\\n}\\r\\n\\r\\n.button-card{\\r\\n    margin-top: 3px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9ob21lL2NvbXBvbmVudHMvYWRkLWZpbGVzL2FkZC1maWxlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2hvbWUvY29tcG9uZW50cy9hZGQtZmlsZXMvYWRkLWZpbGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLWZpbGVzIHtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gIHBhZGRpbmc6IDQwcHg7XHJcbn1cclxuXHJcbi5idXR0b24tY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-files',\r\n  templateUrl: './add-files.component.html',\r\n  styleUrls: ['./add-files.component.css']\r\n})\r\nexport class AddFilesComponent implements OnInit {\r\n  @Output() selectedFiles = new EventEmitter<any>()\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onFileSelect($event){\r\n    this.selectedFiles.emit($event);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9jb21wb25lbnRzL2NvbXByZXNzb3IvY29tcHJlc3Nvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FileService } from 'src/app/services/file.service';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-compressor',\r\n  templateUrl: './compressor.component.html',\r\n  styleUrls: ['./compressor.component.css']\r\n})\r\nexport class CompressorComponent implements OnInit {\r\n  value = 0;\r\n  url: any;\r\n  refresh = false;\r\n  fileName: String;\r\n  isDownloaded = false;\r\n  isStarted = false;\r\n  isDownloadCompleted = false;\r\n  constructor(private fileService: FileService, private api: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    this.url = environment.uri;\r\n    this.fileService.isDownloadCompleted.subscribe(data => {\r\n      this.isDownloadCompleted = data;\r\n    });\r\n    this.fileService.compressedFiles.subscribe(data => {\r\n      this.isStarted = true;\r\n      this.fileName = this.api.tempId\r\n      this.value = data.length / this.fileService.downloadedFiles.length * 100\r\n      if (data.length == this.fileService.downloadedFiles.length) {\r\n        this.api.createZip(data).subscribe(result => {\r\n          console.log(result)\r\n          this.isDownloaded = true;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  downloadZip(){\r\n    this.refresh= true;\r\n    window.location.href = (this.url + '/images/zip/' + this.fileName + '.zip');\r\n  }\r\n\r\n  refreshReduzer(){\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9jb21wb25lbnRzL2ZpbGUtbGlzdC9maWxlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n} from \"@angular/core\";\r\nimport { ApiService } from \"src/app/services/api.service\";\r\nimport { FileService } from \"src/app/services/file.service\";\r\n\r\nexport interface Image {\r\n  id: string;\r\n  mimeType: string;\r\n  name: string;\r\n  size: number;\r\n  status: string;\r\n  imgUrl: string;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-file-list\",\r\n  templateUrl: \"./file-list.component.html\",\r\n  styleUrls: [\"./file-list.component.css\"],\r\n})\r\nexport class FileListComponent implements OnInit {\r\n  constructor(private api: ApiService, private fileService: FileService) {}\r\n  @Input() selectedFiles;\r\n  imageArr: Image[] = [];\r\n  downloadedFiles = [];\r\n  value = 0;\r\n  isDownloaded = false;\r\n\r\n  ngOnInit() {\r\n    this.downloadedFiles = [];\r\n    this.selectedFiles.forEach((element) => {\r\n      this.imageArr.push({\r\n        id: element.id,\r\n        mimeType: element.mimeType,\r\n        name: element.name,\r\n        size: element.sizeBytes,\r\n        status: \"processing\",\r\n        imgUrl: element.url,\r\n      });\r\n    });\r\n\r\n    this.imageArr.forEach((image) => {\r\n      this.api.getImagesLocallyParallely(image.id).subscribe(\r\n        (resultImage) => {\r\n          image.status = \"done\";\r\n          this.downloadedFiles.push({\r\n            image_details: image,\r\n            image: resultImage,\r\n          });\r\n          this.fileService.setDownloadedFiles(this.downloadedFiles);\r\n          this.value =\r\n            (this.downloadedFiles.length / this.imageArr.length) * 100;\r\n          if (this.value == 100) {\r\n            this.isDownloaded = true;\r\n            this.fileService.isDownloadCompleted.emit(true);\r\n          }\r\n        },\r\n        (error) => {\r\n          image.status = \"failed\";\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","module.exports = \".background{\\r\\n    min-height: 86%; \\r\\n    background-image: url('background.jpg');\\r\\n    background-size: 100% 200px;\\r\\n    background-repeat: no-repeat; ; padding-top: 40px;\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 550px) {\\r\\n    .background {\\r\\n        background-size: 100% 380px;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZix1Q0FBeUQ7SUFDekQsMkJBQTJCO0lBQzNCLDRCQUE0QixJQUFJLGlCQUFpQjtBQUNyRDs7QUFFQTtJQUNJO1FBQ0ksMkJBQTJCO0lBQy9CO0VBQ0YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhY2tncm91bmR7XHJcbiAgICBtaW4taGVpZ2h0OiA4NiU7IFxyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLy4uLy4uLy4uL2Fzc2V0cy9iYWNrZ3JvdW5kLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDIwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgOyBwYWRkaW5nLXRvcDogNDBweDtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1NTBweCkge1xyXG4gICAgLmJhY2tncm91bmQge1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSAzODBweDtcclxuICAgIH1cclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  selectedFiles = [];\r\n  isVisible = false;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onFileSelect($event) {\r\n    this.selectedFiles = $event\r\n    this.isVisible=true\r\n  }\r\n\r\n  test(){\r\n    this.isVisible =!this.isVisible\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { forkJoin } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    \"Content-Type\": \"application/json\",\r\n  }),\r\n};\r\nconst downloadurl = environment.uri + \"/files/download\";\r\nconst zipurl = environment.uri + \"/files/zip\";\r\nconst fileurl = environment.uri + \"/files\";\r\nconst compressurl = environment.uri + \"/files/compress\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ApiService {\r\n  accessToken: String;\r\n  tempId: String;\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getImage(id, name): Observable<any> {\r\n    let data = {\r\n      id: id,\r\n      dir: this.tempId,\r\n      name: name,\r\n      token: this.accessToken,\r\n    };\r\n    return this.httpClient.post(downloadurl, data, httpOptions);\r\n  }\r\n\r\n  getImagesLocally(urlArray: any[]): Observable<any> {\r\n    let forkArr = [];\r\n    urlArray.forEach((item) => {\r\n      forkArr.push(this.httpClient.get(item, { responseType: \"blob\" }));\r\n    });\r\n    return forkJoin(forkArr);\r\n  }\r\n\r\n  getImagesLocallyParallely(id: any): Observable<any> {\r\n    let headers = new HttpHeaders({\r\n      Authorization: \"Bearer \" + this.accessToken,\r\n    });\r\n    let url = \"https://www.googleapis.com/drive/v2/files/\" + id + \"?alt=media\";\r\n    return this.httpClient.get(url, { headers: headers, responseType: \"blob\" });\r\n  }\r\n\r\n  compressImages(image, quality): Observable<any> {\r\n    let data = {\r\n      image: image,\r\n      quality: quality,\r\n      dir: this.tempId,\r\n    };\r\n    return this.httpClient.post(compressurl, data, httpOptions);\r\n  }\r\n\r\n  createZip(images): Observable<any> {\r\n    let data = {\r\n      images: images,\r\n      dir: this.tempId,\r\n    };\r\n    return this.httpClient.post(zipurl, data, httpOptions);\r\n  }\r\n\r\n  getFile(): Observable<any> {\r\n    return this.httpClient.get(fileurl);\r\n  }\r\n}\r\n","import { Injectable, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class FileService {\r\n  @Output() downloadedFiles = [];\r\n  @Output() compressedFiles: EventEmitter<any> = new EventEmitter();\r\n  @Output() isDownloadCompleted: EventEmitter<any> = new EventEmitter();\r\n  selectedFiles = [1, 2, 3, 4];\r\n  constructor() {}\r\n\r\n  setDownloadedFiles(files) {\r\n    this.downloadedFiles = files;\r\n  }\r\n\r\n  getDownloadedFiles() {\r\n    return this.downloadedFiles;\r\n  }\r\n\r\n  setSelectedFiles(files) {\r\n    this.selectedFiles = files;\r\n  }\r\n\r\n  getSelectedFiles() {\r\n    return this.selectedFiles;\r\n  }\r\n}\r\n","module.exports = \".button-card{\\r\\n    margin-top: 3px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2dvb2dsZS1waWNrZXIvZ29vZ2xlLXBpY2tlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9nb29nbGUtcGlja2VyL2dvb2dsZS1waWNrZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b24tY2FyZHtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufSJdfQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { keys } from '../../../keys'\r\nimport { FileService } from 'src/app/services/file.service';\r\nimport { FileListComponent } from 'src/app/modules/home/components/file-list/file-list.component';\r\nimport { ApiService } from 'src/app/services/api.service';\r\ndeclare var gapi: any;\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-google-picker',\r\n  templateUrl: './google-picker.component.html',\r\n  styleUrls: ['./google-picker.component.css']\r\n})\r\nexport class GooglePickerComponent{\r\n  @Output() selectedFiles = new EventEmitter<any>();\r\n\r\n  constructor(private fileService: FileService, private api:ApiService) { }\r\n  developerKey = keys.ApiKey;\r\n  clientId = keys.ClientId\r\n  scope = [\r\n    'profile',\r\n    'email',\r\n    'https://www.googleapis.com/auth/drive'//insert scope here\r\n  ].join(' ');\r\n  pickerApiLoaded = false;\r\n  oauthToken?: any;\r\n\r\n\r\n  loadGoogleDrive() {\r\n    gapi.load('auth', { 'callback': this.onAuthApiLoad.bind(this) });\r\n    gapi.load('picker', { 'callback': this.onPickerApiLoad.bind(this) });\r\n  }\r\n\r\n  onAuthApiLoad() {\r\n    gapi.auth.authorize(\r\n      {\r\n        'client_id': this.clientId,\r\n        'scope': this.scope,\r\n        'immediate': false\r\n      },\r\n      (authResult)=>{\r\n        let src\r\n        if (authResult && !authResult.error) {\r\n          if (authResult.access_token) {\r\n            this.api.tempId = authResult.issued_at\r\n            this.api.accessToken = authResult.access_token;\r\n            let view = new google.picker.View(google.picker.ViewId.DOCS);\r\n            view.setMimeTypes(\"application/vnd.google-apps.folder,image/png,image/jpeg,image/jpg,video/mp4\");\r\n            let pickerBuilder = new google.picker.PickerBuilder();\r\n            let picker = pickerBuilder.\r\n              enableFeature(google.picker.Feature.SUPPORT_DRIVES).\r\n              enableFeature(google.picker.Feature.MULTISELECT_ENABLED).\r\n              setOAuthToken(authResult.access_token).\r\n              addView(view).\r\n              addView(new google.picker.DocsUploadView()).\r\n              setCallback((e) => {\r\n                if (e[google.picker.Response.ACTION] == google.picker.Action.PICKED) {\r\n                  let docs = e[google.picker.Response.DOCUMENTS];\r\n                  this.fileService.setSelectedFiles(docs);\r\n                  alert(this.fileService.getSelectedFiles().length+\" images are selected\")\r\n                  this.selectedFiles.emit(docs)\r\n                }\r\n              }).\r\n              build();\r\n            picker.setVisible(true);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onPickerApiLoad() {\r\n    this.pickerApiLoaded = true;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9pbWFnZS1jb21wcmVzcy9pbWFnZS1jb21wcmVzcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport * as JSZip from \"jszip\";\r\nimport { NgxImageCompressService } from \"ngx-image-compress\";\r\nimport { ApiService } from \"src/app/services/api.service\";\r\nimport { FileService } from \"src/app/services/file.service\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\n@Component({\r\n  selector: \"app-image-compress\",\r\n  templateUrl: \"./image-compress.component.html\",\r\n  styleUrls: [\"./image-compress.component.css\"],\r\n})\r\nexport class ImageCompressComponent implements OnInit {\r\n  file: any;\r\n  localUrl: any;\r\n  localCompressedURl: any;\r\n  sizeOfOriginalImage: number;\r\n  sizeOFCompressedImage: number;\r\n  imgResultBeforeCompress: string;\r\n  imgResultAfterCompress: string;\r\n  compressedImages: any[] = [];\r\n  downloadedFiles: any[] = [];\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private fileService: FileService,\r\n    private imageCompress: NgxImageCompressService\r\n  ) {}\r\n\r\n  selectFile() {\r\n    this.downloadedFiles = this.fileService.getDownloadedFiles();\r\n    let compressedFiles = [];\r\n    this.downloadedFiles.forEach((image) => {\r\n      this.api.compressImages(image, 40).subscribe((data) => {\r\n        compressedFiles.push(data.image);\r\n        this.fileService.compressedFiles.emit(compressedFiles);\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFileLocallyUploaded(event: any) {\r\n    var fileName: any;\r\n    this.file = event.target.files[0];\r\n    fileName = this.file[\"name\"];\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.api\r\n        .getImagesLocally([\r\n          \"https://wallpaperaccess.com/full/124518.jpg\",\r\n          \"https://wallpaperaccess.com/full/212205.jpg\",\r\n        ])\r\n        .subscribe((images) => {\r\n          images.forEach((image) => {\r\n            var reader = new FileReader();\r\n            reader.onload = (event: any) => {\r\n              this.localUrl = event.target.result;\r\n              this.compressFile(this.localUrl, fileName);\r\n            };\r\n            reader.readAsDataURL(image);\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  selectFileLocally() {\r\n    let downloadedFiles = this.fileService.getDownloadedFiles();\r\n    downloadedFiles.forEach((file) => {\r\n      let fileName = file.image_details.name;\r\n      let reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.localUrl = event.target.result;\r\n        console.log(this.localUrl);\r\n        this.compressFile(this.localUrl, fileName);\r\n      };\r\n      reader.readAsDataURL(file.image);\r\n    });\r\n  }\r\n\r\n  compressFile(image, fileName) {\r\n    var orientation = -1;\r\n    this.sizeOfOriginalImage =\r\n      this.imageCompress.byteCount(image) / (1024 * 1024);\r\n    console.warn(\"Size in bytes is now:\", this.sizeOfOriginalImage);\r\n    this.imageCompress\r\n      .compressFile(image, orientation, 50, 50)\r\n      .then((result) => {\r\n        this.imgResultAfterCompress = result;\r\n        this.localCompressedURl = result;\r\n        this.sizeOFCompressedImage =\r\n          this.imageCompress.byteCount(result) / (1024 * 1024);\r\n        console.warn(\r\n          \"Size in bytes after compression:\",\r\n          this.sizeOFCompressedImage\r\n        );\r\n        // create file from byte\r\n        const imageName = fileName;\r\n        // call method that creates a blob from dataUri\r\n        const imageBlob = this.dataURItoBlob(\r\n          this.imgResultAfterCompress.split(\",\")[1]\r\n        );\r\n        this.compressedImages.push({ image: imageBlob, name: imageName });\r\n      });\r\n  }\r\n\r\n  download = async () => {\r\n    const zip = new JSZip();\r\n    this.compressedImages.forEach((obj) => {\r\n      zip.file(obj.name + \".jpg\", obj.image, { base64: true });\r\n    });\r\n    zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n      saveAs(content, \"compressed.zip\");\r\n    });\r\n  };\r\n\r\n  dataURItoBlob(dataURI) {\r\n    const byteString = window.atob(dataURI);\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n    const blob = new Blob([int8Array], { type: \"image/jpeg\" });\r\n    return blob;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.downloadedFiles = this.fileService.getDownloadedFiles();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sb2NhbC1maWxlLXBpY2tlci9sb2NhbC1maWxlLXBpY2tlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-local-file-picker\",\n  templateUrl: \"./local-file-picker.component.html\",\n  styleUrls: [\"./local-file-picker.component.css\"],\n})\nexport class LocalFilePickerComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  loadImages(): void {}\n}\n","module.exports = \".example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox. \\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL25hdi1iYXIvbmF2LWJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0U7bURBQ2lEO0VBQ2pELGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvbmF2LWJhci9uYXYtYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1maWxsLXJlbWFpbmluZy1zcGFjZSB7XHJcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LiBcclxuICAgICBFdmVyeSB0b29sYmFyIHJvdyB1c2VzIGEgZmxleGJveCByb3cgbGF5b3V0LiAqL1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // uri: \"http://localhost:3000\"\r\n  uri: \"http://34.93.161.110:3000\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export const keys = {\r\n    ApiKey: 'AIzaSyDcGrvCo-L_-2GiPlPrOKpyN0UdTDG_jL0',\r\n    ClientId: '832322660559-4ep4aq1im6unsf0rprf1r75t91ej9nah.apps.googleusercontent.com'\r\n};","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}